import { useParams } from "react-router-dom";
import { FlaskConical, AlertTriangle, CheckCircle, XCircle, Activity } from "lucide-react";
import AppLayout from "@/components/AppLayout";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import artifacts from "@/data/postex_artifacts.json";

const PostExploitation = () => {
  const { projectId } = useParams();

  const getDetectionBadge = (detected: number, total: number) => {
    const percentage = (detected / total) * 100;
    if (percentage === 0) return { variant: "success" as const, text: "0 Detections" };
    if (percentage < 33) return { variant: "low" as const, text: `${detected}/${total} Detected` };
    if (percentage < 66) return { variant: "medium" as const, text: `${detected}/${total} Detected` };
    return { variant: "high" as const, text: `${detected}/${total} Detected` };
  };

  return (
    <AppLayout projectId={projectId}>
      <div className="space-y-6">
        <div className="flex items-start justify-between">
          <div>
            <h1 className="text-2xl font-bold tracking-tight">Post-Exploitation</h1>
            <p className="text-muted-foreground mt-1">
              Test artifacts and lab results (synthetic mock data only)
            </p>
          </div>
        </div>

        {/* Safety Disclaimer */}
        <Alert className="border-warning/50 bg-warning/10">
          <AlertTriangle className="h-4 w-4" />
          <AlertDescription>
            <strong>Demo Only:</strong> These are static synthetic results. No real malware, EDR/AV testing, or file analysis occurs in this demo.
            Real testing requires customer-controlled lab environments and proper legal approvals.
          </AlertDescription>
        </Alert>

        {/* Lab Status */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <Activity className="h-5 w-5 mr-2" />
              Lab Environment Status
            </CardTitle>
            <CardDescription>Mock lab connector status (non-functional)</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="flex items-center space-x-4">
              <div className="flex items-center space-x-2">
                <div className="h-3 w-3 rounded-full bg-muted animate-pulse"></div>
                <span className="text-sm text-muted-foreground">Lab Connector: Offline (Demo Mode)</span>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Artifacts Table */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <FlaskConical className="h-5 w-5 mr-2" />
              Test Artifacts ({artifacts.length})
            </CardTitle>
            <CardDescription>Synthetic artifacts with mock detection results</CardDescription>
          </CardHeader>
          <CardContent>
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>Name</TableHead>
                  <TableHead>Type</TableHead>
                  <TableHead>Hash (Mock)</TableHead>
                  <TableHead>Size</TableHead>
                  <TableHead>Detection Result</TableHead>
                  <TableHead>Created</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {artifacts.map((artifact) => {
                  const detection = getDetectionBadge(
                    artifact.detectionResult.detected,
                    artifact.detectionResult.total
                  );
                  return (
                    <TableRow key={artifact.id} className="cursor-pointer hover:bg-accent">
                      <TableCell className="font-medium">{artifact.name}</TableCell>
                      <TableCell>
                        <Badge variant="outline">{artifact.type}</Badge>
                      </TableCell>
                      <TableCell className="mono text-xs">{artifact.hash.slice(0, 16)}...</TableCell>
                      <TableCell>{artifact.size}</TableCell>
                      <TableCell>
                        <Badge
                          className={
                            detection.variant === "success"
                              ? "bg-success text-white"
                              : detection.variant === "low"
                              ? "bg-low text-white"
                              : detection.variant === "medium"
                              ? "bg-medium text-white"
                              : "bg-high text-white"
                          }
                        >
                          {detection.text}
                        </Badge>
                      </TableCell>
                      <TableCell className="text-sm text-muted-foreground">
                        {new Date(artifact.created).toLocaleDateString()}
                      </TableCell>
                    </TableRow>
                  );
                })}
              </TableBody>
            </Table>
          </CardContent>
        </Card>

        {/* Artifact Details Grid */}
        <div className="grid gap-6 md:grid-cols-2">
          {artifacts.slice(0, 4).map((artifact) => (
            <Card key={artifact.id}>
              <CardHeader>
                <CardTitle className="text-base">{artifact.name}</CardTitle>
                <CardDescription className="mono text-xs">
                  {artifact.hash.slice(0, 24)}...
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <p className="text-sm text-muted-foreground mb-2">Detection Summary</p>
                  <div className="p-3 bg-muted rounded space-y-2">
                    <div className="flex items-center justify-between">
                      <span className="text-sm">Detection Rate:</span>
                      <Badge
                        variant={artifact.detectionResult.detected === 0 ? "outline" : "default"}
                      >
                        {artifact.detectionResult.detected}/{artifact.detectionResult.total}
                      </Badge>
                    </div>
                    {artifact.detectionResult.vendors.length > 0 && (
                      <div>
                        <p className="text-xs text-muted-foreground mb-1">Detected by:</p>
                        <div className="flex flex-wrap gap-1">
                          {artifact.detectionResult.vendors.slice(0, 3).map((vendor, i) => (
                            <Badge key={i} variant="secondary" className="text-xs">
                              {vendor}
                            </Badge>
                          ))}
                        </div>
                      </div>
                    )}
                    <p className="text-xs text-muted-foreground italic">
                      {artifact.detectionResult.note}
                    </p>
                  </div>
                </div>

                <div>
                  <p className="text-sm text-muted-foreground mb-2">Metadata</p>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">Obfuscation:</span>
                      <span className="font-medium">{artifact.metadata.obfuscation}</span>
                    </div>
                    <div>
                      <span className="text-muted-foreground">Capabilities:</span>
                      <div className="flex flex-wrap gap-1 mt-1">
                        {artifact.metadata.capabilities.map((cap, i) => (
                          <Badge key={i} variant="outline" className="text-xs">
                            {cap}
                          </Badge>
                        ))}
                      </div>
                    </div>
                    <div>
                      <span className="text-muted-foreground">IOCs:</span>
                      <div className="flex flex-wrap gap-1 mt-1">
                        {artifact.metadata.ioc.map((ioc, i) => (
                          <Badge key={i} variant="secondary" className="text-xs mono">
                            {ioc}
                          </Badge>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </AppLayout>
  );
};

export default PostExploitation;
